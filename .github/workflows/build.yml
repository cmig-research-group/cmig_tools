name: Continuous CMIG Tools Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  matlab-ci:
    runs-on: self-hosted

    env:
      MATLAB_BIN: /usr/pubsw/packages/matlab/R2024b/bin
    steps:
      - uses: actions/checkout@v4

      - name: Compute CI tag & filenames
        id: meta
        run: |
          TAG=ci-$(date -u +%Y%m%d-%H%M)
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
          echo "TARBALL=cmig-tools-$TAG.tar.gz" >> "$GITHUB_OUTPUT"

      - name: Show MATLAB version
        run: |
          export PATH="${MATLAB_BIN}:$PATH"
          matlab -batch "version"

      - name: Build MATLAB components
        working-directory: ./DEAP
        run: |
          export PATH="${MATLAB_BIN}:$PATH"
          make clean
          make deploy

      - name: Verify build outputs
        working-directory: ./DEAP
        run: |
          echo "=== Verifying Deployment Artifacts ==="
          for prog in FEMA_DEAP_worker/FEMA_DEAP_worker FEMA_DEAP_wrapper/FEMA_DEAP_wrapper FEMA_DEAP_gencache/FEMA_DEAP_gencache; do
            [ -f "$prog" ] && echo "✓ $prog" || { echo "✗ $prog - BUILD FAILED"; exit 1; }
          done
          if [ -f "../FEMA/FEMA_wrapper/FEMA_wrapper" ]; then
            echo "✓ FEMA/FEMA_wrapper/FEMA_wrapper"
          else
            echo "✗ FEMA/FEMA_wrapper/FEMA_wrapper - BUILD FAILED"
            exit 1
          fi
          echo "✅ All deployment artifacts verified successfully!"

      - name: Package CI build artifacts
        run: |
          mkdir -p build-artifacts
          cp -r DEAP/FEMA_DEAP_gencache build-artifacts/
          cp -r DEAP/FEMA_DEAP_worker build-artifacts/
          cp -r DEAP/FEMA_DEAP_wrapper build-artifacts/
          cp -r FEMA/FEMA_wrapper build-artifacts/
          export PATH="${MATLAB_BIN}:$PATH"
          {
            echo "Build Date (UTC): $(date -u)"
            echo "Git Commit: ${{ github.sha }}"
            echo "Branch: ${{ github.ref_name }}"
            echo "MATLAB Version: $(matlab -batch 'version' 2>/dev/null | head -1)"
          } > build-artifacts/build_info.txt

      - name: Create tarball
        run: |
          tar -czf "${{ steps.meta.outputs.TARBALL }}" -C build-artifacts .

      - name: Create/Update CI prerelease
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.TAG }}
          name: Continuous Build ${{ steps.meta.outputs.TAG }}
          prerelease: true
          draft: false
          generate_release_notes: false
          files: |
            ${{ steps.meta.outputs.TARBALL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete older CI releases (keep last 10)
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          keep_latest: 10
          delete_tags: true
          delete_tag_pattern: ci-
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
